name: Build and Publish Docker Image

on: [ push, pull_request, workflow_dispatch ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - { name: 'x86_64', dockerPlatform: 'linux/amd64' }
          - { name: 'aarch64', dockerPlatform: 'linux/arm64' }

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/v}" | tee -a $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker Layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: "${{ runner.os }}-${{ env.runner_arch }}-buildx01-${{ github.sha }}"
          restore-keys: "${{ runner.os }}-${{ env.runner_arch }}-buildx01-"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Build
        uses: docker/build-push-action@v2
        with:
          platforms: ${{ matrix.platform.dockerPlatform }}
          context: .
          file: linux.Dockerfile
          push: ${{ startsWith(github.ref, 'refs/tags/') }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          tags: |
            ghcr.io/${{ github.repository_owner }}/AppImageKit:latest-${{ matrix.platform.name }}
            ghcr.io/${{ github.repository_owner }}/AppImageKit:release-${{ env.RELEASE_VERSION }}-${{ matrix.platform.name }}

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
